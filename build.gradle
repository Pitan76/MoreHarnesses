plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.10-SNAPSHOT" apply false
    id 'com.matthewprenger.cursegradle' version '1.+'
    id "com.modrinth.minotaur" version "2.+"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "com.modrinth.minotaur"
    apply plugin: "com.matthewprenger.cursegradle"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven { url "https://maven.neoforged.net/releases" }
        maven { url "https://maven.pitan76.net/" }
        maven { url "https://maven.shedaniel.me/" }
        mavenLocal()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"

        // Mojang Mappings
        //mappings loom.officialMojangMappings()

        mappings loom.layered() {
            it.mappings("net.fabricmc:yarn:${rootProject.yarn_mappings}:v2")
            it.mappings file("../mappings/121-1fix.tiny")
        }

        modApi "net.pitan76:mcpitanlib-common-${rootProject.mcpitanlib_version}"
    }

    if (name in rootProject.enabled_platforms.split(",")) {
        var modLoader = name

        if (System.getenv("CURSEFORGE_TOKEN") != null) {
            curseforge {
                apiKey = System.getenv("CURSEFORGE_TOKEN")
                project {
                    id = '1323049'
                    changelog = rootProject.changelog + "\nMCPitanLib version: " + mcpitanlib_version.split(":")[1]
                    releaseType = 'beta'

                    if (modLoader == "fabric")
                        addGameVersion "Fabric"

                    if (modLoader == "neoforge")
                        addGameVersion "NeoForge"

                    addGameVersion '1.21.6'
                    addGameVersion '1.21.7'
                    addGameVersion '1.21.8'

                    relations {
                        if (modLoader == "fabric")
                            requiredDependency "fabric-api"

                        requiredDependency 'mcpitanlibarch'
                    }

                    mainArtifact(tasks.remapJar)
                }
                options {
                    forgeGradleIntegration = false
                }
            }

        }

        if (System.getenv("MODRINTH_TOKEN") != null) {
            modrinth {
                token = System.getenv("MODRINTH_TOKEN")
                projectId = 'more-harnesses'
                versionNumber = project.mod_version + "-" + modLoader

                gameVersions = ['1.21.6', '1.21.7', '1.21.8']

                versionType = 'beta'
                uploadFile = tasks.remapJar
                changelog = rootProject.changelog + "\nMCPitanLib version: " + mcpitanlib_version.split(":")[1]
                loaders = [modLoader]
                dependencies {
                    if (modLoader == "fabric")
                        required.project "P7dR8mSH" // Fabric API

                    required.project "uNRoUnGT" // MCPitanLib
                }
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    mod_name = rootProject.mod_name
    mod_id = rootProject.mod_id
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {

    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release = 21
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    java {
        withSourcesJar()
    }
}
